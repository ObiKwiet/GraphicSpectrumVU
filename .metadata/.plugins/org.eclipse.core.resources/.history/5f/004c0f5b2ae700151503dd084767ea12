/***********************************************************
edma_init contains the functions and data strcutres that handle
the DMA trasfer of the audio samples.

A tripple buffering system is used. Each new sample is transferred into
lower half of the "Lower" buffer, and the upper half of the "Upper". The "Active"
contained samples that will be processed next, and is not modified. When the
Upper buffer fills, and the Lower buffer fills halfway, and interrupt makes the
"Upper" buffer "Active", the "Lower" buffer "Upper", and the "Active" buffer is
overwritten as the new "Lower" buffer. This mean that the first half of each new
dataset contains the data from the upper half of the last data set.

************************************************************/

#include "fsl_device_registers.h"
#include "fsl_edma_driver.h"

#define BUF_SIZE        16

static uint16_t sampleBuffer[3][BUF_SIZE];

static struct sBufferIdx {
	uint16_t activeBuffer;
	uint16_t lowerBuffer;
	uint16_t upperBuffer;
} sBufferIdx = {
		.activeBuffer = 0,
		.lowerBuffer = 1,
	    .upperBuffer = 2
};

static struct Chn_State {
edma_chn_state_t chn0;
edma_chn_state_t chn1;
} Chn_State;

static struct stcd {
edma_software_tcd_t chn0;
edma_software_tcd_t chn1;
} stcd;

void config_DMA_Upper(void);

void config_DMA_Lower(void);
